// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define NUM 1
#define SYM 2
#define FNC 3




// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LALT  k2  &ht LCTRL  k3  &ht LSHFT  k4
//#define HRMR(k1,k2,k3,k4) &ht RSHFT k1 &ht RCTRL k2  &ht RALT k3  &ht RGUI  k4


//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT  k2  &ht LGUI  k3  &ht LCTRL  k4
//#define HRMR(k1,k2,k3,k4) &ht RCTRL  k1 &ht RGUI k2  &ht RALT k3  &ht RSHFT  k4

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT  k2  &ht LCTRL  k3  &ht LGUI  k4
#define HRMR(k1,k2,k3,k4) &ht RGUI  k1 &ht RCTRL k2  &ht RALT k3  &ht RSHFT  k4

// === Macros para acentos y ñ (macOS U.S.) ===
/ {
    macros {
        // á (Option + e → a)
        a_acute: a_acute {
            label = "ZM_a_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E)>, <&kp A>;
        };
        // ñ (Option + n → n)
        n_tilde: n_tilde {
            label = "ZM_n_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N)>, <&kp N>;
        };
        // Repite para é, í, ó, ú si necesitas...
    };

};





/ {
    macros {
        my_appl: my_appl {
            label = "ZM_my_appl";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings
                = <&macro_tap &kp C &kp S &kp A &kp N &kp H &kp U &kp E  &kp Z &kp A &kp A &kp AT &kp R &kp A &kp L &kp U &kp N &kp T &kp E &kp C &kp H &kp DOT &kp C &kp O &kp M>

                ;
        };
    };
};

/ {
    macros {
        rut_rpy: rut_rpy {
            label = "ZM_rut_rpy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings
                = <&macro_tap &kp N8 &kp N3 &kp N3 &kp N8 &kp N2 &kp N7 &kp N0 &kp N0 &kp MINUS &kp N6>

                ;
        };
    };
};

/ {
    macros {
        my_p: my_p {
            label = "ZM_my_p";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings
                = <&macro_tap  &kp M  &kp A &kp U &kp R &kp N1 &kp N1>

                ;
        };
    };
};

/ {
    macros {
        my_m: my_m {
            label = "ZM_my_m";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings
                = <&macro_tap  &kp C  &kp R &kp S &kp A &kp L  &kp M &kp A &kp R &kp Z  &kp A &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>

                ;
        };
    };
};

/ {
    macros {
        prueba: prueba {
            label = "ZM_prueba";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
           wait-ms = <10>;
            bindings
                = <&kp F &kp A &kp S &kp T>
                , <&macro_wait_time 500>
                , <&kp S &kp L &kp O &kp W>
            ;
        };
    };
};


/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM SYM>;
            then-layer = <FNC>;
        };
    };



#define SYM_SPC  &lt SYM SPACE
//#define LCA_ENT  &mt LC(LALT) ENTER
#define A_ACUTE &mt a a_acute 
#define N_TILDE &mt n n_tilde 
#define SFT_ENT  &ht RSHFT ENTER
#define SFT_ESC  &ht RSHFT ESC
#define ALT_ESC  &ht LALT ESC
#define SFT_BSPC &ht RSHFT BSPC
#define GUI_BSPC  &ht RGUI BSPC
//#define GUI_TAB  &ht RGUI LG(TAB)
#define GUI_ENT  &ht RGUI ENTER
#define GUI_SPC  &ht RGUI SPACE
#define CTL_TAB  &ht LCTRL TAB
#define CTL_ESC  &ht LCTRL ESC
#define CTL_ACUTE &ht LCTRL ACUTE
#define CTL_SPC  &ht RCTRL SPACE
#define NUM_TAB  &lt NUM TAB
#define NUM_SPC  &lt NUM SPACE



    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │    P     │
&trans      &kp Q      &kp W      &kp E      &kp R      &kp T           &kp Y      &kp U      &kp I      &kp O      &kp P     &trans     
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│     A    │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │   BSPC   │
&trans     HRML(A    ,    S     ,    D     ,   F      )  &kp G          &kp H     HRMR(J   ,    K     ,    L     ,   BSPC   ) &trans     
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│    Z     │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │  GUI_ENT │
 &trans    HRML(Z    ,   X      ,     C    ,     V    )  &kp B          N_TILDE   &kp M     &kp COMMA   &kp DOT    GUI_ENT  &trans     
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                   ALT_ESC   NUM_TAB     GUI_ENT       CTL_SPC    SYM_SPC     SFT_ESC
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        NUM_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮   
        //│    ` ~   │  my_m    │    UP    │    my_p  │  [ {     │   │  } ]     │  7 &     │  8 *     │  9 (     │  ; :     │   
&trans     &kp GRAVE   &my_appl    &kp UP    &my_p     &kp LBKT        &kp RBKT   &kp N7     &kp N8     &kp N9    &kp SEMI    &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤   
        //│ LEFT     │  DOWN    │   DOWN   │  RIGHT   │  - _     │   │   = +    │  4 $     │  5 %     │  6 ^     │    ' "   │   
&trans     HRML(TAB  ,  LEFT    ,   DOWN   ,  RIGHT   ) &kp MINUS     &kp EQUAL  HRMR( N4  ,   N5     ,   N6     ,  SQT     )  &trans    
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤   
        //│   PREV   │  DOWN    │   UP     │   NEXT   │   MUTE   │   │   \ |    │  1 !     │  2 @     │  3 #     │  / ? ¿   │   
&trans HRML(C_PREV   , C_VOL_DN , C_VOL_UP ,  C_NEXT  ) &kp C_PP     &kp BSLH    &kp N1     &kp N2     &kp N3    &kp FSLH   &trans
        //├──────────┼──────────┼──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┼──────────┼──────────┤  
                                   &trans    &trans    &trans          &trans     &kp N0     &trans        
        //                          ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;    
        };

        SYM_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│    1 !   │    2 @   │   3 #    │   4 $    │    5 %   │   │   6 ^    │   7 &    │   8 *    │   9 (    │   0 )    │
   &trans    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5        &kp N6      &kp N7    &kp N8     &kp N9     &kp N0     &trans 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ LEFT     │  DOWN    │    UP    │  RIGHT   │          │   │    F11   │    F4    │    F5    │    F6    │  ; :     │
  &trans   HRML(LEFT ,  DOWN    ,    UP    ,  RIGHT   )  &trans        &kp F11   HRMR( F4  ,    F5    ,    F6    , SEMI     ) &trans 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │    F10   │    F1    │    F2    │    F3    │   \ |    │
   &trans  &kp LG(TAB) &kt LALT  &kt LG(TAB)     &trans     &trans     &kp F10      &kp F1    &kp F2     &kp F3     &kp BSLH  &trans 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                    &trans    &trans     &trans         &trans     &trans   &trans
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯

//           │   HOME   │ PAGE DN  │ PAGE UP  │ END      │ my_appl  │   │    F12   │    F7    │    F8    │    F9    │  BSPC    │
//   &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &my_appl       &kp F12      &kp F7    &kp F8     &kp F9     &kp BSPC  &trans 
            >;
        };

        FNC_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │PROFILE 3 │          │          │          │  RESET   │
&trans     &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0  &bt BT_SEL 3   &trans     &trans     &trans    &sys_reset &trans 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │PROFILE 4 │          │          │          │BOOTLOADER│
&trans    &bootloader  &trans     &trans     &trans    &bt BT_SEL 1  &bt BT_SEL 4   &trans     &trans     &trans   &bootloader  &trans 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
&trans       &trans     &trans     &trans   &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans  &trans 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &trans   &trans     &trans         &trans     &trans   &trans
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
    };
};
